/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChatIdRouteImport } from './routes/chat/$id'
import { Route as authSignUpRouteImport } from './routes/(auth)/sign-up'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { ServerRoute as ApiUploadIndexServerRouteImport } from './routes/api/upload/index'
import { ServerRoute as ApiChatIndexServerRouteImport } from './routes/api/chat/index'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc/$'
import { ServerRoute as ApiFilesKeyServerRouteImport } from './routes/api/files/$key'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatIdRoute = ChatIdRouteImport.update({
  id: '/chat/$id',
  path: '/chat/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignUpRoute = authSignUpRouteImport.update({
  id: '/(auth)/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiUploadIndexServerRoute = ApiUploadIndexServerRouteImport.update({
  id: '/api/upload/',
  path: '/api/upload/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiChatIndexServerRoute = ApiChatIndexServerRouteImport.update({
  id: '/api/chat/',
  path: '/api/chat/',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiFilesKeyServerRoute = ApiFilesKeyServerRouteImport.update({
  id: '/api/files/$key',
  path: '/api/files/$key',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/chat/$id': typeof ChatIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/chat/$id': typeof ChatIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/chat/$id': typeof ChatIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/sign-in' | '/sign-up' | '/chat/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/sign-up' | '/chat/$id'
  id: '__root__' | '/' | '/(auth)/sign-in' | '/(auth)/sign-up' | '/chat/$id'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
  ChatIdRoute: typeof ChatIdRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/files/$key': typeof ApiFilesKeyServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
  '/api/chat': typeof ApiChatIndexServerRoute
  '/api/upload': typeof ApiUploadIndexServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/files/$key': typeof ApiFilesKeyServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
  '/api/chat': typeof ApiChatIndexServerRoute
  '/api/upload': typeof ApiUploadIndexServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/files/$key': typeof ApiFilesKeyServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
  '/api/chat/': typeof ApiChatIndexServerRoute
  '/api/upload/': typeof ApiUploadIndexServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/auth/$'
    | '/api/files/$key'
    | '/api/trpc/$'
    | '/api/chat'
    | '/api/upload'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/auth/$'
    | '/api/files/$key'
    | '/api/trpc/$'
    | '/api/chat'
    | '/api/upload'
  id:
    | '__root__'
    | '/api/auth/$'
    | '/api/files/$key'
    | '/api/trpc/$'
    | '/api/chat/'
    | '/api/upload/'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiFilesKeyServerRoute: typeof ApiFilesKeyServerRoute
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
  ApiChatIndexServerRoute: typeof ApiChatIndexServerRoute
  ApiUploadIndexServerRoute: typeof ApiUploadIndexServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat/$id': {
      id: '/chat/$id'
      path: '/chat/$id'
      fullPath: '/chat/$id'
      preLoaderRoute: typeof ChatIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/upload/': {
      id: '/api/upload/'
      path: '/api/upload'
      fullPath: '/api/upload'
      preLoaderRoute: typeof ApiUploadIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/chat/': {
      id: '/api/chat/'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatIndexServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/files/$key': {
      id: '/api/files/$key'
      path: '/api/files/$key'
      fullPath: '/api/files/$key'
      preLoaderRoute: typeof ApiFilesKeyServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
  ChatIdRoute: ChatIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiFilesKeyServerRoute: ApiFilesKeyServerRoute,
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
  ApiChatIndexServerRoute: ApiChatIndexServerRoute,
  ApiUploadIndexServerRoute: ApiUploadIndexServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
